{"version":3,"file":"static/js/245.85f99cf7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/shared/components/AddButton/add-button.module.scss?83b9","shared/components/AddButton/AddButton.jsx","shared/hooks/useForm.js","webpack://react-homework-template/./src/shared/components/ToggleButton/toggle-button.module.scss?477c","shared/components/ToggleButton/ToggleButton.jsx","shared/components/Dropdown/Dropdown.jsx","webpack://react-homework-template/./src/shared/components/SimpleField/simple-field.module.scss?c2ed","shared/components/SimpleField/SimpleField.jsx","shared/utils/toDateString.js","images/svg/calendary.svg","webpack://react-homework-template/./src/shared/components/Calendar/calendar.module.scss?5535","shared/components/Calendar/Calendar.jsx","webpack://react-homework-template/./src/shared/components/SecondaryButton/secondary-button.module.scss?9675","shared/components/SecondaryButton/SecondaryButton.jsx","components/AddTransactionForm/initialState.js","webpack://react-homework-template/./src/components/AddTransactionForm/add-transaction-form.module.scss?a690","components/AddTransactionForm/AddTransactionForm.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.scss?a2f2","webpack://react-homework-template/./src/shared/components/EditButton/edit-button.module.scss?a1a3","shared/components/EditButton/EditButton.jsx","webpack://react-homework-template/./src/shared/components/DeleteButton/delete-button.module.scss?056c","shared/components/DeleteButton/DeleteButton.jsx","webpack://react-homework-template/./src/components/TransactionsList/TransactionsListItem/TransactionsListItem.module.scss?11fb","components/TransactionsList/TransactionsListItem/TransactionsListItem.jsx","webpack://react-homework-template/./src/components/TransactionsList/TransactionsList.module.scss?b6f0","components/TransactionsList/TransactionsList.jsx","webpack://react-homework-template/./src/components/TransactionsListMobile/TransactionsListMobileItem/TransactionsListMobileItem.module.scss?c47e","components/TransactionsListMobile/TransactionsListMobileItem/TransactionsListMobileItem.jsx","components/TransactionsListMobile/TransactionsListMobile.jsx","pages/HomePage/HomePage.jsx","shared/components/DropdownIndicator/DropdownIndicator.jsx","webpack://react-homework-template/./src/shared/components/PrimaryButton/primary-button.module.scss?14d5","shared/components/PrimaryButton/PrimaryButton.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"add-button_button__eKi4A\"};","import PropTypes from 'prop-types';\nimport styles from './add-button.module.scss';\n\nconst AddButton = ({ onBtnClick, props }) => {\n  return <button className={styles.button} onClick={onBtnClick} {...props}></button>;\n};\n\nexport default AddButton;\n\nAddButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  props: PropTypes.object,\n}","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleDataChange = ({ type, data }) => {\n    if (type === 'date') {\n      setState(prevState => {\n        return { ...prevState, transactionDate: data };\n      });\n    }\n    if (type === 'type') {\n      setState(prevState => {\n        return { ...prevState, type: data };\n      });\n    }\n    if (type === 'category') {\n      setState(prevState => {\n        return { ...prevState, categoryId: data };\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleDataChange, handleSubmit };\n};\n\nexport default useForm;\n\nuseForm.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"toggle-button_wrapper__gTPXH\",\"switch\":\"toggle-button_switch__fUAC9\",\"checked\":\"toggle-button_checked__0nEhj\",\"slider\":\"toggle-button_slider__m+yY+\",\"round\":\"toggle-button_round__B7MoG\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styles from './toggle-button.module.scss';\n\nconst ToggleButton = ({ getChecked, onClick }) => {\n  const [checked, setChecked] = useState(false);\n  const labelClasses = checked ? `${styles.switch} ${styles.checked}` : styles.switch;\n\n  return (\n    <div className={styles.wrapper}>\n      <label className={labelClasses}>\n        <input\n          className={styles.checkbox}\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {\n            getChecked(checked);\n            if (checked) {\n              onClick({ type: 'type', data: 'INCOME' });\n              setChecked(prevState => !prevState);\n              return;\n            }\n            onClick({ type: 'type', data: 'EXPENSE' });\n            setChecked(prevState => !prevState);\n          }}\n        />\n        <span className={styles.slider + ' ' + styles.round}></span>\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleButton;\n\nToggleButton.propTypes = {\n  getChecked: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport DropdownIndicator from '../DropdownIndicator/DropdownIndicator';\n\nconst Dropdown = ({ options = [], onChange }) => {\n  const [value, setValue] = useState(null);\n\n  return (\n    <Select\n      options={options}\n      components={{ DropdownIndicator }}\n      value={value}\n      placeholder=\"Select a category\"\n      onChange={value => {\n        setValue(value);\n        onChange({ type: 'category', data: value.value });\n      }}\n      styles={{\n        placeholder: baseStyles => ({\n          ...baseStyles,\n          fontFamily: 'CirceRegular',\n          color: '#BDBDBD',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n        }),\n        control: baseStyles => ({\n          ...baseStyles,\n          width: '100%',\n          height: '32px',\n          border: 'none',\n          borderBottom: '1px solid #E0E0E0',\n          cursor: 'pointer',\n          backgroundColor: 'transparent',\n          '&:hover': null,\n          boxShadow: 'none',\n        }),\n        indicatorSeparator: () => ({\n          display: 'none',\n        }),\n        dropdownIndicator: (baseStyles, state) => ({\n          ...baseStyles,\n          transform: state.isFocused ? 'rotate(180deg)' : '',\n          transition: 'transform 400ms',\n        }),\n        singleValue: baseStyles => ({\n          ...baseStyles,\n          fontFamily: 'CirceRegular',\n          color: '#000000',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n        }),\n        menu: base => ({\n          ...base,\n          margin: 0,\n          width: '100%',\n          padding: '12px 0',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n          backdropFilter: 'blur(25px)',\n          borderRadius: '20px',\n          overflow: 'hidden',\n        }),\n        option: (_, state) => ({\n          paddingTop: '8px',\n          paddingBottom: '8px',\n          paddingLeft: '20px',\n          fontFamily: 'CirceRegular',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n          display: 'flex',\n          alignItems: 'center',\n          cursor: 'pointer',\n          ':hover': {\n            backgroundColor: state.isSelected ? '' : 'white',\n            color: '#FF6596',\n          },\n          color: state.isSelected ? '#FF6596' : '#000000',\n        }),\n        menuList: base => ({\n          ...base,\n          '::-webkit-scrollbar': {\n            width: '0px',\n            height: '0px',\n          },\n        }),\n      }}\n    />\n  );\n};\n\nexport default Dropdown;\n\nDropdown.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// Приклад використання\n// const [value, setValue] = useState({ label: 'One', value: 'one' });\n\n// <Dropdown\n//   options={[\n//     { label: 'One', value: 'one' },\n//     { label: 'Two', value: 'two' },\n//     { label: 'Three', value: 'three' },\n//   ]}\n//   value={value}\n//   onChange={setValue}\n// />;\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"simple-field_formGroup__tqFfT\",\"field\":\"simple-field_field__mYIDS\",\"iconField\":\"simple-field_iconField__x33ev\",\"centered\":\"simple-field_centered__jNO4b\"};","import PropTypes from 'prop-types';\nimport css from './simple-field.module.scss';\n\nconst SimpleField = ({ value = '', centered = false, icon, ...props }) => {\n  let fieldClasses = css.field;\n\n  if (icon) {\n    fieldClasses = fieldClasses + ' ' + css.iconField;\n  }\n\n  if (centered) {\n    fieldClasses = fieldClasses + ' ' + css.centered;\n  }\n\n  return (\n    <div className={css.formGroup}>\n      <input className={fieldClasses} value={value} {...props} />\n      {icon}\n    </div>\n  );\n};\n\nexport default SimpleField;\n\nSimpleField.propTypes = {\n  icon: PropTypes.node,\n  props: PropTypes.object,\n};\n","export const toDateString = (value) => {\n    let today = value;\n    const date =\n      today.getDate() < 10\n        ? today.getDate().toString().padStart(2, 0)\n        : today.getDate();\n    const month =\n      today.getMonth() < 10\n        ? (today.getMonth() + 1).toString().padStart(2, 0)\n        : today.getMonth() + 1;\n    const year = today.getFullYear();\n    const dateNow = `${year}-${month}-${date}`;\n    return dateNow;\n  }","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCalendary(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 11H7v2h2v-2Zm4 0h-2v2h2v-2Zm4 0h-2v2h2v-2Zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2Zm0 16H5V9h14v11Z\",\n    fill: \"#4A56E2\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendary);\nexport default __webpack_public_path__ + \"static/media/calendary.30bf32a7a4348ede2ce910569aedc915.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"calendar_field__pFy3H\",\"box\":\"calendar_box__gal01\",\"inputBox\":\"calendar_inputBox__MTg5O\",\"icon\":\"calendar_icon__givQr\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport addDays from 'date-fns/addDays';\nimport { toDateString } from 'shared/utils/toDateString';\nimport calendarIcon from 'images/svg/calendary.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styles from './calendar.module.scss';\n\nconst AddTransactionCalendar = ({ stateDate, onChange }) => {\n  const [startDate, setStartDate] = useState(new Date(stateDate));\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <div className={styles.inputBox}>\n      <img className={styles.icon} src={calendarIcon} alt=\"Calendar icon\" />\n      <button className={styles.field} type=\"button\" onClick={onClick} ref={ref}>\n        {value}\n      </button>\n    </div>\n  ));\n\n  return (\n    <DatePicker\n      showIcon\n      selected={startDate}\n      onChange={date => {\n        setStartDate(date);\n        onChange({ type: 'date', data: toDateString(date) });\n      }}\n      customInput={<CustomInput />}\n      dateFormat=\"dd.MM.yyyy\"\n      maxDate={addDays(new Date(), 0)}\n    />\n  );\n};\n\nexport default AddTransactionCalendar;\n\nAddTransactionCalendar.propTypes = {\n  stateDate: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"secondary-button_button__pH-kF\"};","import PropTypes from 'prop-types';\nimport styles from './secondary-button.module.scss';\n\nconst SecondaryButton = ({ children, onBtnClick, ...props }) => {\n  return (\n    <button className={styles.button} onClick={onBtnClick} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default SecondaryButton;\n\nSecondaryButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onBtnClick: PropTypes.func.isRequired,\n  props: PropTypes.object,\n}\n\n// Приклад використання\n// const handleClick = () => {\n//   console.log('Click');\n// };\n\n// return (\n//   <div className=\"container\">\n//     <SecondaryButton onClick={handleClick}>ADD</SecondaryButton>\n//   </div>\n// );\n","import { toDateString } from \"shared/utils/toDateString\";\n\nconst INITIAL_STATE = {\n  transactionDate: toDateString(new Date()),\n  type: 'INCOME',\n  categoryId: '063f1132-ba5d-42b4-951d-44011ca46262',\n  comment: '',\n  amount: '',\n};\n\nexport default INITIAL_STATE;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"add-transaction-form_title__SjWKx\",\"form\":\"add-transaction-form_form__LgtGB\",\"field\":\"add-transaction-form_field__TQA7h\",\"wrapper\":\"add-transaction-form_wrapper__5-Fxj\",\"box\":\"add-transaction-form_box__7ENrd\",\"type\":\"add-transaction-form_type__pMFfQ\",\"income\":\"add-transaction-form_income__DJuca\",\"expense\":\"add-transaction-form_expense__F2o6j\",\"inputBox\":\"add-transaction-form_inputBox__alIk5\",\"icon\":\"add-transaction-form_icon__90jgj\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCategories } from 'redux/transaction/transaction-selectors';\nimport useForm from 'shared/hooks/useForm';\nimport ToggleButton from 'shared/components/ToggleButton/ToggleButton';\nimport Dropdown from 'shared/components/Dropdown/Dropdown';\nimport SimpleField from 'shared/components/SimpleField/SimpleField';\nimport AddTransactionCalendar from 'shared/components/Calendar/Calendar';\nimport PrimaryButton from 'shared/components/PrimaryButton/PrimaryButton';\nimport SecondaryButton from 'shared/components/SecondaryButton/SecondaryButton';\nimport INITIAL_STATE from './initialState';\nimport calendarIcon from 'images/svg/calendary.svg';\nimport styles from './add-transaction-form.module.scss';\n\nconst AddTransactionForm = ({ initialState = INITIAL_STATE, isEdit = false, onSubmit, setShowModal, titleEdit }) => {\n  const [checked, setChecked] = useState(true);\n  const { state, handleChange, handleDataChange, handleSubmit } = useForm({ initialState, onSubmit });\n  const categories = useSelector(selectCategories);\n  const filteredCategories = categories.filter(item => item.name !== 'Income');\n  const options = filteredCategories.map(({ id, name }) => ({ label: name, value: id }));\n  const { transactionDate, type, comment, amount, categoryId } = state;\n  const categoryName = filteredCategories.find(item => item.id === categoryId);\n  const income = type === 'INCOME' ? styles.income : styles.type;\n  const expense = type === 'EXPENSE' ? styles.expense : styles.type;\n\n  const handleChecked = data => {\n    setChecked(data);\n  };\n\n  const handleCancelBtnClick = () => {\n    setShowModal(false);\n    document.body.classList.remove('activeBody');\n  };\n\n  return (\n    <>\n      <p className={styles.title}>{titleEdit || 'Add transaction'}</p>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        {isEdit ? (\n          <>\n            <p className={styles.type}>\n              <span className={income}>Income</span> / <span className={expense}>Expense</span>\n            </p>\n            {type === 'EXPENSE' && (\n              <input className={styles.field} name=\"categoryId\" type=\"text\" value={categoryName.name} disabled />\n            )}\n          </>\n        ) : (\n          <>\n            <ToggleButton getChecked={handleChecked} onClick={handleDataChange} />\n            {!checked && <Dropdown options={options} onChange={handleDataChange} />}\n          </>\n        )}\n        <div className={styles.wrapper}>\n          <SimpleField\n            // className={styles.field}\n            name=\"amount\"\n            type=\"number\"\n            value={amount}\n            placeholder=\"0.00\"\n            centered\n            required\n            onChange={handleChange}\n          />\n          {isEdit ? (\n            <div className={styles.inputBox}>\n              <img className={styles.icon} src={calendarIcon} alt=\"Calendar icon\" />\n              <SimpleField name=\"transactionDate\" type=\"text\" value={transactionDate} disabled />\n            </div>\n          ) : (\n            <AddTransactionCalendar stateDate={transactionDate} onChange={handleDataChange} />\n          )}\n        </div>\n        <SimpleField name=\"comment\" type=\"text\" value={comment} placeholder=\"Comment\" onChange={handleChange} />\n        <div className={styles.box}>\n          <PrimaryButton>{isEdit ? 'Save' : 'Add'}</PrimaryButton>\n          <SecondaryButton onBtnClick={handleCancelBtnClick}>Cancel</SecondaryButton>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransactionForm;\n\nAddTransactionForm.propTypes = {\n  initialState: PropTypes.object,\n  isEdit: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n  setShowModal: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"home-page_wrapper__bK12s\",\"title\":\"home-page_title__RLZyB\",\"wrap\":\"home-page_wrap__rC8x9\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"edit-button_button__Yx4Lp\",\"label\":\"edit-button_label__aO0tA\"};","import PropTypes from 'prop-types';\nimport styles from './edit-button.module.scss';\n\nconst EditButton = ({ id, onClick }) => {\n  return (\n    <button\n      className={styles.button}\n      onClick={() => {\n        onClick(id);\n      }}\n    >\n      <span className={styles.label}>Edit</span>\n    </button>\n  );\n};\n\nexport default EditButton;\n\nEditButton.propTypes = {\n  id: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"delete-button_button__NgmWc\"};","import PropTypes from 'prop-types';\nimport styles from './delete-button.module.scss';\n\nconst DeleteButton = ({ id, onClick }) => {\n  return (\n    <button\n      className={styles.button}\n      onClick={e => {\n        onClick(id);\n      }}\n    >\n      Delete\n    </button>\n  );\n};\n\nexport default DeleteButton;\n\nDeleteButton.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n}\n\n// Приклад використання\n// const handleDelete = id => {\n//   console.log('Deleted ' + id);\n// };\n\n// <div className=\"container\">\n//   <DeleteButton id={'1'} onClick={handleDelete} />;\n// </div>;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TransactionsListItem_item__2cJuc\",\"leftBox\":\"TransactionsListItem_leftBox__ce6rj\",\"rightBox\":\"TransactionsListItem_rightBox__9kbcH\",\"svg\":\"TransactionsListItem_svg__LRKGX\",\"comment\":\"TransactionsListItem_comment__TAPk9\",\"sum\":\"TransactionsListItem_sum__5Aw2P\",\"type\":\"TransactionsListItem_type__f-SmD\",\"category\":\"TransactionsListItem_category__koP2G\",\"date\":\"TransactionsListItem_date__Qj-Tk\",\"greenSum\":\"TransactionsListItem_greenSum__Qn1cd\",\"redSum\":\"TransactionsListItem_redSum__PO3vo\"};","import PropTypes from 'prop-types';\nimport EditButton from 'shared/components/EditButton/EditButton';\nimport DeleteButton from 'shared/components/DeleteButton/DeleteButton';\n\nimport styles from './TransactionsListItem.module.scss';\nimport numeral from 'numeral';\n\nconst TransactionsListItem = ({ id, category, sum, date, type, comment, onEditBtnClick, onDeleteBtnClick }) => {\n  const formattedNumber = numeral(sum).format('0,00.00').replaceAll(',', '\\u00A0');\n\n  const typeOfTrans = type === 'INCOME' ? '+' : '-';\n  const Newdate = new Date(date);\n  const day = Newdate.getDate().toString().padStart(2, '0');\n  const month = (Newdate.getMonth() + 1).toString().padStart(2, '0');\n  const year = Newdate.getFullYear().toString().slice(-2);\n  const formattedDate = `${day}.${month}.${year}`;\n  return (\n    <li className={styles.item}>\n      <div className={styles.leftBox}>\n        <div>\n          <p className={styles.date}>{formattedDate}</p>\n        </div>\n        <div>\n          <p className={styles.type}>{typeOfTrans}</p>\n        </div>\n        <div>\n          <p className={styles.category}> {category?.name ? category.name : 'Unknown'}</p>\n        </div>\n        <div>\n          <p className={styles.comment}>{comment}</p>\n        </div>\n      </div>\n      <div className={styles.sum}>\n        <span className={typeOfTrans === '+' ? styles.greenSum : styles.redSum}>{formattedNumber}</span>\n      </div>\n      <div className={styles.rightBox}>\n        <EditButton onClick={() => onEditBtnClick(id)} />\n        <DeleteButton onClick={() => onDeleteBtnClick(id)} />\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsListItem;\n\nTransactionsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  category: PropTypes.object,\n  sum: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  onEditBtnClick: PropTypes.func.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TransactionsList_title__WxhBO\",\"img\":\"TransactionsList_img__Ao3ri\",\"titleText\":\"TransactionsList_titleText__-LLND\",\"textLover\":\"TransactionsList_textLover__etjZW\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTransaction, updateTranscation } from 'redux/transaction/transaction-operations';\nimport { selectAllTransactions, selectCategories } from 'redux/transaction/transaction-selectors';\nimport TransactionsListItem from './TransactionsListItem/TransactionsListItem';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport useMediaQuery from 'shared/hooks/useMediaQuery';\n\nimport wallet from '../../images/wallett.png';\nimport styles from './TransactionsList.module.scss';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar-react/dist/simplebar.min.css';\n\nconst TransactionsList = () => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [transaction, setTransaction] = useState({});\n  const [oldAmount, setOldAmount] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectAllTransactions);\n  const categories = useSelector(selectCategories);\n\n  const isTablet = useMediaQuery('(max-width: 1279px)');\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n\n  const handleEditBtnClick = id => {\n    setIsEdit(true);\n    const transaction = transactions && transactions.find(item => item.id === id);\n    setOldAmount(transaction.amount);\n    if (transaction?.amount < 0) {\n      setTransaction(() => {\n        setTransaction({ ...transaction, amount: transaction.amount * -1 });\n      });\n    } else {\n      setTransaction(transaction);\n    }\n    setShowModal(true);\n  };\n\n  const handleDeleteBtnClick = id => {\n    const data = transactions.find(item => item.id === id);\n    dispatch(deleteTransaction(data));\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onAddFormSubmit = data => {\n    const value = { ...data, oldAmount };\n    dispatch(updateTranscation(value));\n    setShowModal(false);\n  };\n  const transactionsCopy = [...transactions];\n\n  transactionsCopy.sort((a, b) => {\n    const dateA = new Date(a.transactionDate);\n    const dateB = new Date(b.transactionDate);\n    return dateB.getTime() - dateA.getTime();\n  });\n\n  const element =\n    transactionsCopy &&\n    transactionsCopy.map(({ id, transactionDate, type, categoryId, comment, amount }) => {\n      const categoryName = categories && categories.find(item => item.id === categoryId);\n      if (amount && amount < 0) {\n        amount = amount * -1;\n      }\n      return (\n        <TransactionsListItem\n          key={id}\n          id={id}\n          category={categoryName}\n          sum={amount}\n          date={transactionDate}\n          type={type}\n          comment={comment}\n          onEditBtnClick={handleEditBtnClick}\n          onDeleteBtnClick={handleDeleteBtnClick}\n        />\n      );\n    });\n\n  const whatToShow =\n    transactionsCopy.length === 0 ? (\n      <div className={styles.boxNotFound}>\n        <p className={styles.titleText}>No Transactions yet</p>\n        <p className={styles.textLover}>\n          Start transactions with your wallet.All transactions made will be displayed here.\n        </p>\n        <img src={wallet} alt=\"no transaction\" className={styles.img} />\n      </div>\n    ) : (\n      <div>\n        <div className={styles.title}>\n          <p>Date</p>\n          <p>Type</p>\n          <p>Category</p>\n          <p>Comment</p>\n          <p>Sum</p>\n        </div>\n\n        {isTablet && (\n          <SimpleBar style={{ maxHeight: '51vh' }}>\n            {' '}\n            <div className={styles.list_box}>\n              <ul className={styles.list}>{element}</ul>\n              {showModal && (\n                <Modal onClose={onCloseModal}>\n                  <AddTransactionForm\n                    titleEdit=\"Edit transaction\"\n                    initialState={transaction}\n                    isEdit={isEdit}\n                    onSubmit={onAddFormSubmit}\n                    setShowModal={setShowModal}\n                  />\n                </Modal>\n              )}\n            </div>\n          </SimpleBar>\n        )}\n\n        {isDesktop && (\n          <SimpleBar\n            style={{\n              maxHeight: '460px',\n            }}\n          >\n            {' '}\n            <div className={styles.list_box}>\n              <ul className={styles.list}>{element}</ul>\n              {showModal && (\n                <Modal onClose={onCloseModal}>\n                  <AddTransactionForm\n                    titleEdit=\"Edit transaction\"\n                    initialState={transaction}\n                    isEdit={isEdit}\n                    onSubmit={onAddFormSubmit}\n                    setShowModal={setShowModal}\n                  />\n                </Modal>\n              )}\n            </div>\n          </SimpleBar>\n        )}\n      </div>\n    );\n  return <> {whatToShow}</>;\n};\n\nexport default TransactionsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"TransactionsListMobileItem_box__vlaiC\",\"table\":\"TransactionsListMobileItem_table__htwQH\",\"tbody\":\"TransactionsListMobileItem_tbody__F5pGd\",\"body\":\"TransactionsListMobileItem_body__9HSOO\",\"head\":\"TransactionsListMobileItem_head__F5jZr\",\"green\":\"TransactionsListMobileItem_green__zOM+Z\",\"red\":\"TransactionsListMobileItem_red__aXhID\",\"greenSum\":\"TransactionsListMobileItem_greenSum__LLgfR\",\"redSum\":\"TransactionsListMobileItem_redSum__Lbaj7\",\"edit\":\"TransactionsListMobileItem_edit__H4ItN\",\"editBox\":\"TransactionsListMobileItem_editBox__TIfdZ\"};","import PropTypes from 'prop-types';\nimport EditButton from 'shared/components/EditButton/EditButton';\nimport DeleteButton from 'shared/components/DeleteButton/DeleteButton';\n\nimport styles from './TransactionsListMobileItem.module.scss';\nimport numeral from 'numeral';\n\n\nconst TransactionsListMobileItem = ({ id, category, sum, date, type, comment, onEditBtnClick, onDeleteBtnClick }) => {\n  const newSum = numeral(sum).format('0,00.00').replaceAll(\",\",\"\\u00A0\")\n  const Newdate = new Date(date);\nconst day = Newdate.getDate().toString().padStart(2, '0');\nconst month = (Newdate.getMonth() + 1).toString().padStart(2, '0');\nconst year = Newdate.getFullYear().toString().slice(-2);\nconst formattedDate = `${day}.${month}.${year}`;\n  const typeOfTrans = type === 'INCOME' ? '+' : '-';\n  return (\n    <div className={styles.box}>\n      <table className={styles.table}>\n        <tbody className={styles.tbody}>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Date</td>\n            <td className={styles.body}>{formattedDate}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Type</td>\n            <td className={styles.body}>{typeOfTrans}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Category</td>\n            <td className={styles.body}>{category?.name?category.name:'unknown'}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Comment</td>\n            <td className={styles.body}>{comment}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Sum</td>\n            <td className={typeOfTrans==='+'?styles.greenSum:styles.redSum}>{newSum}</td>\n          </tr>\n\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>\n                 <DeleteButton onClick={() => onDeleteBtnClick(id)} />\n            </td>\n            <td className={styles.body}>\n              <div className={styles.editBox}>\n                <EditButton onClick={() => onEditBtnClick(id)} />\n                {/* <span onClick={() => onEditBtnClick(id)} className={styles.edit}>Edit</span> */}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionsListMobileItem;\n\nTransactionsListMobileItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  category: PropTypes.object.isRequired,\n  sum: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  onEditBtnClick: PropTypes.func.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n}","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTransaction, updateTranscation } from 'redux/transaction/transaction-operations';\nimport { selectAllTransactions, selectCategories } from 'redux/transaction/transaction-selectors';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\n\n// import styles from './TransactionsListMobile.module.scss';\nimport TransactionsListMobileItem from './TransactionsListMobileItem/TransactionsListMobileItem';\n\nconst TransactionListMobile = () => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [transaction, setTransaction] = useState('');\n  const [oldAmount, setOldAmount] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectAllTransactions);\n  const categories = useSelector(selectCategories);\n\n  const handleEditBtnClick = id => {\n    setIsEdit(true);\n    const transaction = transactions && transactions.find(item => item.id === id);\n    setOldAmount(transaction.amount);\n    if (transaction?.amount < 0) {\n      setTransaction(() => {\n        setTransaction({ ...transaction, amount: transaction.amount * -1 });\n      });\n    } else {\n      setTransaction(transaction);\n    }\n    setShowModal(true);\n    document.body.classList.add('activeBody');\n  };\n\n  const handleDeleteBtnClick = id => {\n    const data = transactions.find(item => item.id === id);\n    dispatch(deleteTransaction(data));\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n    document.body.classList.remove('activeBody');\n  };\n\n  const onAddFormSubmit = data => {\n    const value = { ...data, oldAmount };\n    dispatch(updateTranscation(value));\n    setShowModal(false);\n    document.body.classList.remove('activeBody');\n  };\n\n  const transactionsCopy = [...transactions];\n\n  transactionsCopy.sort((a, b) => {\n    const dateA = new Date(a.transactionDate);\n    const dateB = new Date(b.transactionDate);\n    return dateB.getTime() - dateA.getTime();\n  });\n\n  const element = transactionsCopy.map(({ id, transactionDate, type, categoryId, comment, amount }) => {\n    const categoryName = categories.find(item => item.id === categoryId);\n\n    return (\n      <TransactionsListMobileItem\n        key={id}\n        id={id}\n        category={categoryName}\n        sum={amount}\n        date={transactionDate}\n        type={type}\n        comment={comment}\n        onEditBtnClick={handleEditBtnClick}\n        onDeleteBtnClick={handleDeleteBtnClick}\n      />\n    );\n  });\n\n  return (\n    <>\n      {' '}\n      {element}\n      {showModal && (\n        <Modal onClose={onCloseModal}>\n          <AddTransactionForm\n            initialState={transaction}\n            isEdit={isEdit}\n            onSubmit={onAddFormSubmit}\n            setShowModal={setShowModal}\n          />\n        </Modal>\n      )}{' '}\n    </>\n  );\n};\nexport default TransactionListMobile;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTransaction, getAllCategories, getAllTransactions } from 'redux/transaction/transaction-operations';\nimport AddButton from 'shared/components/AddButton/AddButton';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport css from './home-page.module.scss';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport TransactionListMobile from 'components/TransactionsListMobile/TransactionsListMobile';\nimport useMediaQuery from 'shared/hooks/useMediaQuery';\nimport Balance from 'components/PageLayout/SideBar/Balance/Balance';\n\nconst HomePage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllCategories());\n    dispatch(getAllTransactions());\n  }, [dispatch]);\n\n  const handleAddBtnClick = () => {\n    setShowModal(true);\n    document.body.classList.add('activeBody');\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n    document.body.classList.remove('activeBody');\n  };\n\n  const onAddFormSubmit = data => {\n    dispatch(addTransaction(data));\n    setShowModal(false);\n    document.body.classList.remove('activeBody');\n  };\n\n  const isTablet = useMediaQuery('(min-width: 768px)');\n  const isMobile = useMediaQuery('(max-width: 767px)');\n\n  return (\n    <div className={css.wrap}>\n      {isMobile && <AddButton type=\"button\" onBtnClick={handleAddBtnClick} />}\n      <div className={css.wrapper}>\n        {isTablet && <AddButton type=\"button\" onBtnClick={handleAddBtnClick} />}\n        {isMobile && <Balance />}\n\n        {isTablet && <TransactionsList setShowModal={setShowModal} />}\n        {isMobile && <TransactionListMobile />}\n        {showModal && (\n          <Modal onClose={onCloseModal}>\n            <AddTransactionForm onSubmit={onAddFormSubmit} setShowModal={setShowModal} />\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import PropTypes from 'prop-types';\nimport { components } from 'react-select';\n\nconst DropdownIndicator = props => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <svg width=\"20\" height=\"11\" viewBox=\"0 0 20 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1 1L10 10L19 1\" stroke=\"black\" />\n      </svg>\n    </components.DropdownIndicator>\n  );\n};\n\nexport default DropdownIndicator;\n\nDropdownIndicator.propTypes = {\n  props: PropTypes.object,\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"primary-button_button__YlxDi\"};","import PropTypes from 'prop-types';\nimport styles from './primary-button.module.scss';\n\nconst PrimaryButton = ({ children, ...props }) => {\n  return (\n    <button className={styles.button} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n\nPrimaryButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  props: PropTypes.object,\n}\n\n// Приклад використання\n// const handleClick = () => {\n//   console.log('Click');\n// };\n\n// return (\n//   <div className=\"container\">\n//     <PrimaryButton onClick={handleClick}>ADD</PrimaryButton>\n//   </div>\n// );\n"],"names":["onBtnClick","props","className","styles","onClick","useForm","initialState","onSubmit","useState","state","setState","handleChange","target","prevState","name","value","checked","newValue","type","handleDataChange","data","transactionDate","categoryId","handleSubmit","e","preventDefault","propTypes","PropTypes","getChecked","setChecked","labelClasses","onChange","options","setValue","components","DropdownIndicator","placeholder","baseStyles","fontFamily","color","fontSize","lineHeight","control","width","height","border","borderBottom","cursor","backgroundColor","boxShadow","indicatorSeparator","display","dropdownIndicator","transform","isFocused","transition","singleValue","menu","base","margin","padding","backdropFilter","borderRadius","overflow","option","_","paddingTop","paddingBottom","paddingLeft","alignItems","isSelected","menuList","centered","icon","fieldClasses","css","toDateString","today","date","getDate","toString","padStart","month","getMonth","year","getFullYear","stateDate","Date","startDate","setStartDate","CustomInput","forwardRef","ref","src","calendarIcon","alt","showIcon","selected","customInput","dateFormat","maxDate","addDays","children","comment","amount","INITIAL_STATE","isEdit","setShowModal","titleEdit","filteredCategories","useSelector","selectCategories","filter","item","map","id","label","categoryName","find","income","expense","disabled","required","PrimaryButton","document","body","classList","remove","category","sum","onEditBtnClick","onDeleteBtnClick","formattedNumber","numeral","format","replaceAll","typeOfTrans","Newdate","day","slice","formattedDate","setIsEdit","transaction","setTransaction","oldAmount","setOldAmount","showModal","dispatch","useDispatch","transactions","selectAllTransactions","categories","isTablet","useMediaQuery","isDesktop","handleEditBtnClick","handleDeleteBtnClick","deleteTransaction","onCloseModal","onAddFormSubmit","updateTranscation","transactionsCopy","sort","a","b","dateA","getTime","element","whatToShow","length","wallet","style","maxHeight","Modal","onClose","newSum","add","useEffect","getAllCategories","getAllTransactions","handleAddBtnClick","isMobile","Balance","addTransaction","c","viewBox","fill","xmlns","d","stroke"],"sourceRoot":""}